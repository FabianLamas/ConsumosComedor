<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgFoto.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tmrConsumos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>110, 3</value>
  </metadata>
  <metadata name="tmrSincronizacion.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>228, 3</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>377, 3</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>28</value>
  </metadata>
</root>